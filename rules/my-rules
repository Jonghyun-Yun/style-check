#  such may be abused to blacklist certain words even spelled correctly.
# capitalize is case sensitive, and also bracketed by non-word.
# phrase and spelling are case insensitive, but bracketed by non-word characters.
# syntax is case sensitive but not bracketed by non-word; probably best if used with regexes.
\bet al\.[^}]        % syntax use the \etal{} command instead. (or write one to italicize)
\bet\. al\.          % syntax use the \etal{} command, "et" needs no dot (et alii). (or write one to italicize)
\bc\.f\.\b             % syntax should be cf. for "confer" (latin for compare)
\b$i\)[^$]              % syntax leave the paren in math mode -- should be $i)$
\b$ii\)[^$]             % syntax leave the paren in math mode -- should be $ii)$
\b$iii\)[^$]            % syntax leave the paren in math mode -- should be $iii)$
\b$iv\)[^$]             % syntax leave the paren in math mode -- should be $iv)$
\b$v\)[^$]              % syntax leave the paren in math mode -- should be $v)$
\ban [b-df-gj-np-tv-z] % syntax probably meant to use "a" instead of "an", though there are exceptions.
\ban [B-DF-GJ-NP-TV-Z][^A-Z/] % syntax probably meant to use "a" instead of "an", though there are exceptions (like acronyms).
\b[Aa] [aeiouAEIOU](?!se|ni|A|ur|RL|ti) % syntax probably meant to use "an" instead of "a", though there are exceptions. (user, useful, AA, unified, uniform, unique, Europe URL; n/a doesn't work, so use {n/a})
\\caption\{[^}]{60,}  % syntax such a long caption should have an abbreviated caption in square brackets
This allows           % phrase tie more explicitly: This (x) allows...
try and               % phrase "try to", though if you're using try as a noun in a compound sentence, this rule is wrong.
impact of             % phrase not a useful metaphor; try evaluation, success, effect, value.
including [^\.]*etc\. % syntax "including" tells of a non-exclusive list, so "etc." is redundant.  This rule will misfire if you have two lists in your sentence, but you shouldn't do that either. ;)
includes [^\.]*etc\.  % syntax "includes" tells of a non-exclusive list, so "etc." is redundant.  This rule will misfire if you have two lists in your sentence, but you shouldn't do that either. ;)
AT&T                  % syntax you poor thing, this won't compile.
doesn't               % phrase be formal.
be occur              % phrase what happens when I'm indecisive about what follows "can"
up until              % phrase "until"
one or more           % phrase probably redundant -- nonzero is probably implied.
is comprise(d|s) of   % phrase you probably mean "is composed of" because "comprises" is more a synonym for "contains" 
will be significantly different % phrase "will differ significantly" for active voice
More importantly,     % phrase probably means the order is wrong: put important stuff first.
todo                  % ignoredcommand
texttt                  % ignoredcommand
